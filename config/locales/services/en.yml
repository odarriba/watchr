en:
  mongoid:
    models:
      service:
        one: "service"
        other: "services"
  services:
    status:
      ok: "Ok"
      warning: "Warning"
      error: "Error"
      unknown: "Unknown"
    priorities:
      priority_0: "High priority"
      priority_1: "Normal priority"
      priority_2: "Low priority"
    resumes:
      max_value: "Maximum value"
      max_value_explanation: "Get the maximum value"
      min_value: "Minimum value"
      min_value_explantion: "Get the minimum value"
      mean_value: "Mean value"
      mean_value_explanation: "Get the mean of all the values"
      sum: "Sum value"
      sum_explanation: "Get the sum of all values"
    index:
      title: "Services management"
      subtitle:
        all: "viewing all services"
        priority_high: "viewing high priority services"
        priority_normal: "viewing normal priority services"
        priority_low: "viewing low priority services"
      button:
        new: "Create a service"
        show: "View"
        edit: "Edit"
        results: "Results"
        hosts: "Hosts"
        destroy: "Destroy"
        destroy_confirmation: "Do you really want to destroy this service?"
      table:
        name: "Name"
        probe: "Probe"
        error: "Error"
    new:
      title: "Create a new service"
      subtitle: "service details"
      continue: "Create the service"
      back: "Back to the list"
    show:
      title: "View a service"
    edit:
      title: "Edit a service"
      continue: "Save changes"
    results:
      title: "Service results"
      results_history: "Results history"
      alerts_history: "Alerts regarding %{service} service"
      service_info: "Service information"
      chart:
        title: "Results of %{service} service"
        subtitle: "Executed every %{interval} seconds"
        x_axis: "Time stamp"
        legend: "%{service} service"
      hosts_results:
        title: "Lastest results per host"
        table:
          host: "Host"
          status: "Status"
          result: "Result (%{units})"
          global: "Global result"
    host_results:
      title: "Service results by host"
      subtitle: "%{service} on %{host}"
      button: "View service results"
      results_history: "Results history on %{host}"
      alerts_history: "Alerts regarding %{service} service on %{host}"
      service_info: "Host information"
      chart:
        title: "Results of %{service} service on %{host}"
        subtitle: "Executed every %{interval} seconds"
        x_axis: "Time stamp"
        y_axis: "Result"
        legend: "%{service} service"
      host_history:
        title: "Latest results"
        table:
          time: "Time stamp"
          status: "Status"
          result: "Result"
    index_hosts:
      title: "Hosts to monitor"
      table:
        name: "Host name"
        address: "Host address"
      button:
        add: "Add host"
        show: "Show host"
        destroy: "Delete"
        destroy_confirmation: "Do you really want to stop monitoring this host? The monitoring results for this host will be deleted."
    sidebar:
      all: "View all services"
      view_by_type: "View services by priority"
    form:
      name: "Name"
      name_placeholder: "Name of the service"
      description: "Description"
      description_placeholder: "(Optional) Description of the service"
      activation: "Status"
      active: "Active"
      inactive: "Inactive"
      priority: "Priority"
      probe: "Probe"
      probe_not_found: "The probe selected isn't available."
      interval: "Interval"
      interval_placeholder: "Testing interval (seconds)"
      interval_helper: "The time (in seconds) between executions of the service's probe."
      clean_interval: "Clean interval"
      clean_interval_placeholder: "Clean interval (seconds)"
      clean_interval_helper: "The time (in seconds) that the results of the testing are stored."
      resume: "Resume"
      resume_helper: "The function used to resume the data to show the results of multiple hosts."
      hosts: "Hosts"
      alerts: "Alerts"
      created_at: "Created at"
      updated_at: "Updated at"
    notice:
      created: "Service (%{name}) <b>created succesfully</b>."
      updated: "Service (%{name}) <b>updated succesfully</b>."
      destroyed: "Service (%{name}) <b>destroyed violently</b>."
      host_added: "Host (%{name}) <b>added succesfully</b> to the service (%{service})."
      host_already_added: "Host (%{name}) <b>was already added</b> to the service (%{service})."
      host_deleted: "Host (%{name}) <b>deleted succesfully</b> from the service (%{service})."
    error:
      not_found: "The service with the requested ID doesn't exist."
      not_active: "The service with the requested ID isn't active."
      hosts_not_exist: "To assign hosts to a service, <b>you have to create them first</b>."
      host_not_found: "The host with the requested ID doesn't exist."
      host_service_not_found: "The host requested doesn't exist or isn't asigned to the service specified."
      host_not_added: "Host (%{name}) <b>couldn't be added</b> to service (%{service})."
      host_not_deleted: "Host (%{name}) <b>couldn't be deleted</b> from service (%{service})."
      not_destroyed: "Service (%{name}) couldn't be destroyed. Please, try again."
      name_invalid: "The name is invalid, length must be between 2 and 30 characters."
      active_invalid: "The activation status is invalid. Check it and try again."
      probe_invalid: "The probe selected is invalid or isn't available at the moment."
      probe_config_invalid: "The probe configuration is invalid. Check it and try again."
      interval_invalid: "The interval is invalid, must be 1 second or grater."
      clean_interval_invalid: "The clean interval is invalid, must be 1 second or grater."
      priority_invalid: "The priority selected isn't a valid one."
      resume_invalid: "The resume function selected isn't a valid one."